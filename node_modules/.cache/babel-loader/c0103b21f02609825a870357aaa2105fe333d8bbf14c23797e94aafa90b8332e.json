{"ast":null,"code":"var _jsxFileName = \"/Users/roneet/Users/Sudipti/quiz_app/src/components/QuizComponent.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Typography, List, ListItem, ListItemText, Checkbox, FormControlLabel, Container, Button, Paper, Stack, Box } from \"@mui/material\";\nimport { fetchQuizQuestions } from \"../data/api\";\nimport QuizResults from \"./QuizResults\";\nimport Question from \"./Question\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QuizComponent = () => {\n  _s();\n  const [questions, setQuestions] = useState([]);\n  const [selectedAnswers, setSelectedAnswers] = useState([]);\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [visitedQuestions, setVisitedQuestions] = useState([]);\n  const [attemptedQuestions, setAttemptedQuestions] = useState([]);\n  const [quizSubmitted, setQuizSubmitted] = useState(false);\n  useEffect(() => {\n    const fetchQuestions = async () => {\n      const quizQuestions = await fetchQuizQuestions();\n      const initialSelectedAnswers = new Array(quizQuestions.length).fill(null);\n      setSelectedAnswers(initialSelectedAnswers);\n      setQuestions(quizQuestions);\n\n      // Mark the first question as visited when the questions are loaded\n      if (quizQuestions.length > 0) {\n        setVisitedQuestions([0]);\n      }\n    };\n    fetchQuestions();\n  }, []);\n  const handleSubmitQuiz = () => {\n    setQuizSubmitted(true);\n  };\n  const handleAnswerSelect = (questionIndex, answerIndex) => {\n    const newSelectedAnswers = [...selectedAnswers];\n    newSelectedAnswers[questionIndex] = answerIndex;\n    setSelectedAnswers(newSelectedAnswers);\n    setAttemptedQuestions([...attemptedQuestions, questionIndex]);\n  };\n  const handleQuestionClick = questionIndex => {\n    setCurrentQuestionIndex(questionIndex);\n\n    // Mark the question as visited\n    if (!visitedQuestions.includes(questionIndex)) {\n      setVisitedQuestions([...visitedQuestions, questionIndex]);\n    }\n  };\n  const currentQuestion = questions[currentQuestionIndex];\n  if (quizSubmitted) {\n    return /*#__PURE__*/_jsxDEV(QuizResults, {\n      questions: questions,\n      selectedAnswers: selectedAnswers,\n      currentQuestion: currentQuestion\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"lg\",\n    style: {\n      backgroundColor: \"#b3a17e\",\n      padding: \"40px 30px 40px 40px\",\n      borderRadius: \"16px\",\n      display: \"flex\",\n      flexDirection: \"column\",\n      justifyContent: \"center\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      children: /*#__PURE__*/_jsxDEV(Question, {\n        currentQuestion: currentQuestion,\n        selectedAnswers: selectedAnswers,\n        currentQuestionIndex: currentQuestionIndex,\n        handleAnswerSelect: handleAnswerSelect\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Stack, {\n      sx: {\n        width: \"100%\",\n        display: \"flex\",\n        justifyContent: \"center\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        variant: \"contained\",\n        color: \"primary\",\n        sx: {\n          marginLeft: \"auto\",\n          marginTop: \"20px\",\n          marginRight: \"10px\",\n          fontSize: \"15px\",\n          padding: \"10px 24px\",\n          fontWeight: 600,\n          display: \"flex\",\n          justifyContent: \"center\"\n        },\n        onClick: handleSubmitQuiz,\n        children: \"Submit Answers\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n};\n_s(QuizComponent, \"aeAgyXeX18rzlWzK2eiDvhLT/DE=\");\n_c = QuizComponent;\nexport default QuizComponent;\nvar _c;\n$RefreshReg$(_c, \"QuizComponent\");","map":{"version":3,"names":["React","useState","useEffect","Typography","List","ListItem","ListItemText","Checkbox","FormControlLabel","Container","Button","Paper","Stack","Box","fetchQuizQuestions","QuizResults","Question","jsxDEV","_jsxDEV","QuizComponent","_s","questions","setQuestions","selectedAnswers","setSelectedAnswers","currentQuestionIndex","setCurrentQuestionIndex","visitedQuestions","setVisitedQuestions","attemptedQuestions","setAttemptedQuestions","quizSubmitted","setQuizSubmitted","fetchQuestions","quizQuestions","initialSelectedAnswers","Array","length","fill","handleSubmitQuiz","handleAnswerSelect","questionIndex","answerIndex","newSelectedAnswers","handleQuestionClick","includes","currentQuestion","fileName","_jsxFileName","lineNumber","columnNumber","maxWidth","style","backgroundColor","padding","borderRadius","display","flexDirection","justifyContent","children","sx","width","type","variant","color","marginLeft","marginTop","marginRight","fontSize","fontWeight","onClick","_c","$RefreshReg$"],"sources":["/Users/roneet/Users/Sudipti/quiz_app/src/components/QuizComponent.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport {\n  Typography,\n  List,\n  ListItem,\n  ListItemText,\n  Checkbox,\n  FormControlLabel,\n  Container,\n  Button,\n  Paper,\n  Stack,\n  Box,\n} from \"@mui/material\";\n\nimport { fetchQuizQuestions } from \"../data/api\";\nimport QuizResults from \"./QuizResults\";\nimport Question from \"./Question\";\n\nconst QuizComponent = () => {\n  const [questions, setQuestions] = useState([]);\n  const [selectedAnswers, setSelectedAnswers] = useState([]);\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [visitedQuestions, setVisitedQuestions] = useState([]);\n  const [attemptedQuestions, setAttemptedQuestions] = useState([]);\n  const [quizSubmitted, setQuizSubmitted] = useState(false);\n  useEffect(() => {\n    const fetchQuestions = async () => {\n      const quizQuestions = await fetchQuizQuestions();\n      const initialSelectedAnswers = new Array(quizQuestions.length).fill(null);\n      setSelectedAnswers(initialSelectedAnswers);\n      setQuestions(quizQuestions);\n\n      // Mark the first question as visited when the questions are loaded\n      if (quizQuestions.length > 0) {\n        setVisitedQuestions([0]);\n      }\n    };\n\n    fetchQuestions();\n  }, []);\n  const handleSubmitQuiz = () => {\n    setQuizSubmitted(true);\n  };\n\n  const handleAnswerSelect = (questionIndex, answerIndex) => {\n    const newSelectedAnswers = [...selectedAnswers];\n    newSelectedAnswers[questionIndex] = answerIndex;\n    setSelectedAnswers(newSelectedAnswers);\n    setAttemptedQuestions([...attemptedQuestions, questionIndex]);\n  };\n\n  const handleQuestionClick = (questionIndex) => {\n    setCurrentQuestionIndex(questionIndex);\n\n    // Mark the question as visited\n    if (!visitedQuestions.includes(questionIndex)) {\n      setVisitedQuestions([...visitedQuestions, questionIndex]);\n    }\n  };\n\n  const currentQuestion = questions[currentQuestionIndex];\n  if (quizSubmitted) {\n    return (\n      <QuizResults\n        questions={questions}\n        selectedAnswers={selectedAnswers}\n        currentQuestion={currentQuestion}\n      />\n    );\n  }\n\n  return (\n    <Container\n      maxWidth=\"lg\"\n      style={{\n        backgroundColor: \"#b3a17e\",\n        padding: \"40px 30px 40px 40px\",\n        borderRadius: \"16px\",\n        display: \"flex\",\n        flexDirection: \"column\",\n        justifyContent: \"center\",\n      }}\n    >\n      <Box display=\"flex\">\n        {/* Overview Panel */}\n\n        <Question\n          currentQuestion={currentQuestion}\n          selectedAnswers={selectedAnswers}\n          currentQuestionIndex={currentQuestionIndex}\n          handleAnswerSelect={handleAnswerSelect}\n        />\n      </Box>\n\n      <Stack\n        sx={{\n          width: \"100%\",\n          display: \"flex\",\n          justifyContent: \"center\",\n        }}\n      >\n        <Button\n          type=\"submit\"\n          variant=\"contained\"\n          color=\"primary\"\n          sx={{\n            marginLeft: \"auto\",\n            marginTop: \"20px\",\n            marginRight: \"10px\",\n            fontSize: \"15px\",\n            padding: \"10px 24px\",\n            fontWeight: 600,\n            display: \"flex\",\n            justifyContent: \"center\",\n          }}\n          onClick={handleSubmitQuiz}\n        >\n          Submit Answers\n        </Button>\n      </Stack>\n    </Container>\n  );\n};\n\nexport default QuizComponent;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}