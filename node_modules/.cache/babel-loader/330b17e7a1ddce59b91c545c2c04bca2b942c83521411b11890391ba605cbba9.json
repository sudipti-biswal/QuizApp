{"ast":null,"code":"var _jsxFileName = \"/Users/roneet/Users/Sudipti/quiz_app/src/components/QuizComponent.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Typography, List, ListItem, ListItemText, Container, Button, Stack, Box } from \"@mui/material\";\nimport { fetchQuizQuestions } from \"../data/api\";\nimport QuizResults from \"./QuizResults\";\nimport Question from \"./Question\";\nimport QueNumber from \"./QueNumber\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QuizComponent = () => {\n  _s();\n  const [questions, setQuestions] = useState([]);\n  const [selectedAnswers, setSelectedAnswers] = useState([]);\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [visitedQuestions, setVisitedQuestions] = useState([]);\n  const [attemptedQuestions, setAttemptedQuestions] = useState([]);\n  const [quizSubmitted, setQuizSubmitted] = useState(false);\n  useEffect(() => {\n    const fetchQuestions = async () => {\n      const quizQuestions = await fetchQuizQuestions();\n      const initialSelectedAnswers = new Array(quizQuestions.length).fill(null);\n      setSelectedAnswers(initialSelectedAnswers);\n      setQuestions(quizQuestions);\n      if (quizQuestions.length > 0) {\n        setVisitedQuestions([0]);\n      }\n    };\n    fetchQuestions();\n  }, []);\n  const handleSubmitQuiz = () => {\n    setQuizSubmitted(true);\n  };\n  const handleAnswerSelect = (questionIndex, answerIndex) => {\n    const newSelectedAnswers = [...selectedAnswers];\n    newSelectedAnswers[questionIndex] = answerIndex;\n    setSelectedAnswers(newSelectedAnswers);\n    setAttemptedQuestions([...attemptedQuestions, questionIndex]);\n  };\n  const handleQuestionClick = questionIndex => {\n    setCurrentQuestionIndex(questionIndex);\n\n    // Mark the question as visited\n    if (!visitedQuestions.includes(questionIndex)) {\n      setVisitedQuestions([...visitedQuestions, questionIndex]);\n    }\n  };\n  const renderOverviewPanel = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        children: \"Questions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(List, {\n        style: {\n          display: \"flex\",\n          flexWrap: \"wrap\"\n        },\n        children: questions.map((question, questionIndex) => /*#__PURE__*/_jsxDEV(ListItem, {\n          onClick: () => handleQuestionClick(questionIndex),\n          button: true,\n          selected: currentQuestionIndex === questionIndex,\n          style: {\n            width: \"50px\",\n            margin: \"4px\",\n            textAlign: \"center\",\n            borderRadius: \"0px 10px 0px 0px\",\n            backgroundColor: attemptedQuestions.includes(questionIndex) ? \"#007bff\" // Attempted questions are blue\n            : visitedQuestions.includes(questionIndex) ? \"#f7a90d\" // Visited questions are yellow\n            : \"#00000073\" // Not visited questions are white\n          },\n          children: /*#__PURE__*/_jsxDEV(ListItemText, {\n            primary: `${questionIndex + 1}`,\n            style: {\n              color: \"#fff\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 15\n          }, this)\n        }, questionIndex, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this);\n  };\n  const currentQuestion = questions[currentQuestionIndex];\n  if (quizSubmitted) {\n    return /*#__PURE__*/_jsxDEV(QuizResults, {\n      questions: questions,\n      selectedAnswers: selectedAnswers,\n      currentQuestion: currentQuestion\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"lg\",\n    style: {\n      backgroundColor: \"#b3a17e\",\n      padding: \"40px 30px 40px 40px\",\n      borderRadius: \"16px\",\n      display: \"flex\",\n      flexDirection: \"column\",\n      justifyContent: \"center\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      children: [/*#__PURE__*/_jsxDEV(QueNumber, {\n        renderOverviewPanel: renderOverviewPanel\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Question, {\n        currentQuestion: currentQuestion,\n        selectedAnswers: selectedAnswers,\n        currentQuestionIndex: currentQuestionIndex,\n        handleAnswerSelect: handleAnswerSelect\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Stack, {\n      sx: {\n        width: \"100%\",\n        display: \"flex\",\n        justifyContent: \"center\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        variant: \"contained\",\n        color: \"primary\",\n        sx: {\n          marginLeft: \"auto\",\n          marginTop: \"20px\",\n          marginRight: \"10px\",\n          fontSize: \"15px\",\n          padding: \"10px 24px\",\n          fontWeight: 600,\n          display: \"flex\",\n          justifyContent: \"center\"\n        },\n        onClick: handleSubmitQuiz,\n        children: \"Submit Answers\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 5\n  }, this);\n};\n_s(QuizComponent, \"aeAgyXeX18rzlWzK2eiDvhLT/DE=\");\n_c = QuizComponent;\nexport default QuizComponent;\nvar _c;\n$RefreshReg$(_c, \"QuizComponent\");","map":{"version":3,"names":["React","useState","useEffect","Typography","List","ListItem","ListItemText","Container","Button","Stack","Box","fetchQuizQuestions","QuizResults","Question","QueNumber","jsxDEV","_jsxDEV","QuizComponent","_s","questions","setQuestions","selectedAnswers","setSelectedAnswers","currentQuestionIndex","setCurrentQuestionIndex","visitedQuestions","setVisitedQuestions","attemptedQuestions","setAttemptedQuestions","quizSubmitted","setQuizSubmitted","fetchQuestions","quizQuestions","initialSelectedAnswers","Array","length","fill","handleSubmitQuiz","handleAnswerSelect","questionIndex","answerIndex","newSelectedAnswers","handleQuestionClick","includes","renderOverviewPanel","children","variant","fileName","_jsxFileName","lineNumber","columnNumber","style","display","flexWrap","map","question","onClick","button","selected","width","margin","textAlign","borderRadius","backgroundColor","primary","color","currentQuestion","maxWidth","padding","flexDirection","justifyContent","sx","type","marginLeft","marginTop","marginRight","fontSize","fontWeight","_c","$RefreshReg$"],"sources":["/Users/roneet/Users/Sudipti/quiz_app/src/components/QuizComponent.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport {\n  Typography,\n  List,\n  ListItem,\n  ListItemText,\n  Container,\n  Button,\n  Stack,\n  Box,\n} from \"@mui/material\";\n\nimport { fetchQuizQuestions } from \"../data/api\";\nimport QuizResults from \"./QuizResults\";\nimport Question from \"./Question\";\nimport QueNumber from \"./QueNumber\";\n\nconst QuizComponent = () => {\n  const [questions, setQuestions] = useState([]);\n  const [selectedAnswers, setSelectedAnswers] = useState([]);\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [visitedQuestions, setVisitedQuestions] = useState([]);\n  const [attemptedQuestions, setAttemptedQuestions] = useState([]);\n  const [quizSubmitted, setQuizSubmitted] = useState(false);\n  useEffect(() => {\n    const fetchQuestions = async () => {\n      const quizQuestions = await fetchQuizQuestions();\n      const initialSelectedAnswers = new Array(quizQuestions.length).fill(null);\n      setSelectedAnswers(initialSelectedAnswers);\n      setQuestions(quizQuestions);\n\n      if (quizQuestions.length > 0) {\n        setVisitedQuestions([0]);\n      }\n    };\n\n    fetchQuestions();\n  }, []);\n  const handleSubmitQuiz = () => {\n    setQuizSubmitted(true);\n  };\n\n  const handleAnswerSelect = (questionIndex, answerIndex) => {\n    const newSelectedAnswers = [...selectedAnswers];\n    newSelectedAnswers[questionIndex] = answerIndex;\n    setSelectedAnswers(newSelectedAnswers);\n    setAttemptedQuestions([...attemptedQuestions, questionIndex]);\n  };\n\n  const handleQuestionClick = (questionIndex) => {\n    setCurrentQuestionIndex(questionIndex);\n\n    // Mark the question as visited\n    if (!visitedQuestions.includes(questionIndex)) {\n      setVisitedQuestions([...visitedQuestions, questionIndex]);\n    }\n  };\n\n  const renderOverviewPanel = () => {\n    return (\n      <div>\n        <Typography variant=\"h5\">Questions</Typography>\n        <List style={{ display: \"flex\", flexWrap: \"wrap\" }}>\n          {questions.map((question, questionIndex) => (\n            <ListItem\n              key={questionIndex}\n              onClick={() => handleQuestionClick(questionIndex)}\n              button\n              selected={currentQuestionIndex === questionIndex}\n              style={{\n                width: \"50px\",\n                margin: \"4px\",\n                textAlign: \"center\",\n                borderRadius: \"0px 10px 0px 0px\",\n                backgroundColor: attemptedQuestions.includes(questionIndex)\n                  ? \"#007bff\" // Attempted questions are blue\n                  : visitedQuestions.includes(questionIndex)\n                  ? \"#f7a90d\" // Visited questions are yellow\n                  : \"#00000073\", // Not visited questions are white\n              }}\n            >\n              <ListItemText\n                primary={`${questionIndex + 1}`}\n                style={{\n                  color: \"#fff\",\n                }}\n              />\n            </ListItem>\n          ))}\n        </List>\n      </div>\n    );\n  };\n\n  const currentQuestion = questions[currentQuestionIndex];\n  if (quizSubmitted) {\n    return (\n      <QuizResults\n        questions={questions}\n        selectedAnswers={selectedAnswers}\n        currentQuestion={currentQuestion}\n      />\n    );\n  }\n\n  return (\n    <Container\n      maxWidth=\"lg\"\n      style={{\n        backgroundColor: \"#b3a17e\",\n        padding: \"40px 30px 40px 40px\",\n        borderRadius: \"16px\",\n        display: \"flex\",\n        flexDirection: \"column\",\n        justifyContent: \"center\",\n      }}\n    >\n      <Box display=\"flex\">\n        <QueNumber renderOverviewPanel={renderOverviewPanel} />\n        <Question\n          currentQuestion={currentQuestion}\n          selectedAnswers={selectedAnswers}\n          currentQuestionIndex={currentQuestionIndex}\n          handleAnswerSelect={handleAnswerSelect}\n        />\n      </Box>\n\n      <Stack\n        sx={{\n          width: \"100%\",\n          display: \"flex\",\n          justifyContent: \"center\",\n        }}\n      >\n        <Button\n          type=\"submit\"\n          variant=\"contained\"\n          color=\"primary\"\n          sx={{\n            marginLeft: \"auto\",\n            marginTop: \"20px\",\n            marginRight: \"10px\",\n            fontSize: \"15px\",\n            padding: \"10px 24px\",\n            fontWeight: 600,\n            display: \"flex\",\n            justifyContent: \"center\",\n          }}\n          onClick={handleSubmitQuiz}\n        >\n          Submit Answers\n        </Button>\n      </Stack>\n    </Container>\n  );\n};\n\nexport default QuizComponent;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}