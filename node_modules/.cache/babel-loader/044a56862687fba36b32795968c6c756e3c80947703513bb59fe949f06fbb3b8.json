{"ast":null,"code":"var _jsxFileName = \"/Users/roneet/Users/Sudipti/quiz_app/src/components/QuizComponent.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Typography, List, ListItem, ListItemText, Radio, FormControlLabel, Container, Button, Paper, RadioGroup, Box } from \"@mui/material\";\nimport { fetchQuizQuestions } from \"../data/api\";\nimport QuestionNo from \"./QuestionNo\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QuizComponent = () => {\n  _s();\n  const [questions, setQuestions] = useState([]);\n  const [selectedAnswers, setSelectedAnswers] = useState([]);\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [visitedQuestions, setVisitedQuestions] = useState([]);\n  const [attemptedQuestions, setAttemptedQuestions] = useState([]);\n  useEffect(() => {\n    const fetchQuestions = async () => {\n      const quizQuestions = await fetchQuizQuestions();\n      setQuestions(quizQuestions);\n      // Initialize selectedAnswers with the same length as the questions array\n      setSelectedAnswers(new Array(quizQuestions.length).fill(null));\n      console.log(\"Fetched questions:\", quizQuestions);\n    };\n    fetchQuestions();\n  }, []);\n  const handleAnswerSelect = (questionIndex, answerIndex) => {\n    const newSelectedAnswers = [...selectedAnswers];\n    newSelectedAnswers[questionIndex] = answerIndex;\n    setSelectedAnswers(newSelectedAnswers);\n    console.log(\"Selected Answers:\", newSelectedAnswers); // Add this line for debugging\n\n    if (!attemptedQuestions.includes(questionIndex)) {\n      setAttemptedQuestions([...attemptedQuestions, questionIndex]);\n    }\n  };\n  const handleQuestionClick = questionIndex => {\n    setCurrentQuestionIndex(questionIndex);\n    if (!visitedQuestions.includes(questionIndex)) {\n      setVisitedQuestions([...visitedQuestions, questionIndex]);\n    }\n  };\n  const currentQuestion = questions[currentQuestionIndex];\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"lg\",\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      justifyContent: \"space-between\",\n      children: [/*#__PURE__*/_jsxDEV(Paper, {\n        elevation: 3,\n        style: {\n          padding: \"20px\",\n          marginRight: \"20px\",\n          width: \"30%\",\n          backgroundColor: \"#f0f0f0\"\n        },\n        children: /*#__PURE__*/_jsxDEV(QuestionNo, {\n          questions: questions,\n          handleQuestionClick: handleQuestionClick,\n          currentQuestionIndex: currentQuestionIndex,\n          attemptedQuestions: attemptedQuestions,\n          visitedQuestions: visitedQuestions\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Paper, {\n        elevation: 3,\n        style: {\n          padding: \"20px\",\n          width: \"70%\",\n          height: \"fit-content\",\n          backgroundColor: \"#ffffff\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          children: \"Quiz Questions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(List, {\n          children: /*#__PURE__*/_jsxDEV(ListItem, {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(ListItemText, {\n                primary: currentQuestion === null || currentQuestion === void 0 ? void 0 : currentQuestion.question\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(RadioGroup, {\n                name: `question-${currentQuestionIndex}`,\n                value: selectedAnswers[currentQuestionIndex],\n                onChange: e => handleAnswerSelect(currentQuestionIndex, e.target.value),\n                children: currentQuestion === null || currentQuestion === void 0 ? void 0 : currentQuestion.incorrect_answers.map((choice, choiceIndex) => /*#__PURE__*/_jsxDEV(FormControlLabel, {\n                  value: choiceIndex,\n                  control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 108,\n                    columnNumber: 34\n                  }, this),\n                  label: choice\n                }, choiceIndex, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 105,\n                  columnNumber: 23\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      style: {\n        marginTop: \"20px\",\n        backgroundColor: \"#007bff\"\n      },\n      children: \"Submit Answers\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n_s(QuizComponent, \"bvlYXx/I8fZqb5X1lsFlP6sSvkg=\");\n_c = QuizComponent;\nexport default QuizComponent;\nvar _c;\n$RefreshReg$(_c, \"QuizComponent\");","map":{"version":3,"names":["React","useState","useEffect","Typography","List","ListItem","ListItemText","Radio","FormControlLabel","Container","Button","Paper","RadioGroup","Box","fetchQuizQuestions","QuestionNo","jsxDEV","_jsxDEV","QuizComponent","_s","questions","setQuestions","selectedAnswers","setSelectedAnswers","currentQuestionIndex","setCurrentQuestionIndex","visitedQuestions","setVisitedQuestions","attemptedQuestions","setAttemptedQuestions","fetchQuestions","quizQuestions","Array","length","fill","console","log","handleAnswerSelect","questionIndex","answerIndex","newSelectedAnswers","includes","handleQuestionClick","currentQuestion","maxWidth","children","display","justifyContent","elevation","style","padding","marginRight","width","backgroundColor","fileName","_jsxFileName","lineNumber","columnNumber","height","variant","primary","question","name","value","onChange","e","target","incorrect_answers","map","choice","choiceIndex","control","label","color","marginTop","_c","$RefreshReg$"],"sources":["/Users/roneet/Users/Sudipti/quiz_app/src/components/QuizComponent.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport {\n  Typography,\n  List,\n  ListItem,\n  ListItemText,\n  Radio,\n  FormControlLabel,\n  Container,\n  Button,\n  Paper,\n  RadioGroup,\n  Box,\n} from \"@mui/material\";\n\nimport { fetchQuizQuestions } from \"../data/api\";\nimport QuestionNo from \"./QuestionNo\";\n\nconst QuizComponent = () => {\n  const [questions, setQuestions] = useState([]);\n  const [selectedAnswers, setSelectedAnswers] = useState([]);\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [visitedQuestions, setVisitedQuestions] = useState([]);\n  const [attemptedQuestions, setAttemptedQuestions] = useState([]);\n\n  useEffect(() => {\n    const fetchQuestions = async () => {\n      const quizQuestions = await fetchQuizQuestions();\n      setQuestions(quizQuestions);\n      // Initialize selectedAnswers with the same length as the questions array\n      setSelectedAnswers(new Array(quizQuestions.length).fill(null));\n      console.log(\"Fetched questions:\", quizQuestions);\n    };\n\n    fetchQuestions();\n  }, []);\n\n  const handleAnswerSelect = (questionIndex, answerIndex) => {\n    const newSelectedAnswers = [...selectedAnswers];\n    newSelectedAnswers[questionIndex] = answerIndex;\n    setSelectedAnswers(newSelectedAnswers);\n\n    console.log(\"Selected Answers:\", newSelectedAnswers); // Add this line for debugging\n\n    if (!attemptedQuestions.includes(questionIndex)) {\n      setAttemptedQuestions([...attemptedQuestions, questionIndex]);\n    }\n  };\n\n  const handleQuestionClick = (questionIndex) => {\n    setCurrentQuestionIndex(questionIndex);\n\n    if (!visitedQuestions.includes(questionIndex)) {\n      setVisitedQuestions([...visitedQuestions, questionIndex]);\n    }\n  };\n\n  const currentQuestion = questions[currentQuestionIndex];\n\n  return (\n    <Container maxWidth=\"lg\">\n      <Box display=\"flex\" justifyContent=\"space-between\">\n        {/* Overview Panel */}\n        <Paper\n          elevation={3}\n          style={{\n            padding: \"20px\",\n            marginRight: \"20px\",\n            width: \"30%\",\n            backgroundColor: \"#f0f0f0\",\n          }}\n        >\n          <QuestionNo\n            questions={questions}\n            handleQuestionClick={handleQuestionClick}\n            currentQuestionIndex={currentQuestionIndex}\n            attemptedQuestions={attemptedQuestions}\n            visitedQuestions={visitedQuestions}\n          />\n        </Paper>\n\n        <Paper\n          elevation={3}\n          style={{\n            padding: \"20px\",\n            width: \"70%\",\n            height: \"fit-content\",\n            backgroundColor: \"#ffffff\",\n          }}\n        >\n          <Typography variant=\"h5\">Quiz Questions</Typography>\n          <List>\n            <ListItem>\n              <div>\n                <ListItemText primary={currentQuestion?.question} />\n                <RadioGroup\n                  name={`question-${currentQuestionIndex}`}\n                  value={selectedAnswers[currentQuestionIndex]}\n                  onChange={(e) =>\n                    handleAnswerSelect(currentQuestionIndex, e.target.value)\n                  }\n                >\n                  {currentQuestion?.incorrect_answers.map(\n                    (choice, choiceIndex) => (\n                      <FormControlLabel\n                        key={choiceIndex}\n                        value={choiceIndex}\n                        control={<Radio />}\n                        label={choice}\n                      />\n                    )\n                  )}\n                </RadioGroup>\n              </div>\n            </ListItem>\n          </List>\n        </Paper>\n      </Box>\n\n      {/* Submit Button */}\n      <Button\n        variant=\"contained\"\n        color=\"primary\"\n        style={{ marginTop: \"20px\", backgroundColor: \"#007bff\" }}\n      >\n        Submit Answers\n      </Button>\n    </Container>\n  );\n};\n\nexport default QuizComponent;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}