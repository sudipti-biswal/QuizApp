{"ast":null,"code":"var _jsxFileName = \"/Users/roneet/Users/Sudipti/quiz_app/src/components/QuizComponent.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Typography, List, ListItem, ListItemText, Radio, RadioGroup, FormControlLabel, FormControl, FormLabel, Container, Paper } from \"@mui/material\";\nimport { fetchQuizQuestions } from \"../data/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QuizComponent = () => {\n  _s();\n  const [questions, setQuestions] = useState([]);\n  const [selectedAnswers, setSelectedAnswers] = useState([]);\n  useEffect(() => {\n    const fetchQuestions = async () => {\n      const quizQuestions = await fetchQuizQuestions();\n      const initialSelectedAnswers = new Array(quizQuestions.length).fill(null);\n      setSelectedAnswers(initialSelectedAnswers);\n      setQuestions(quizQuestions);\n    };\n    fetchQuestions();\n  }, []);\n  const handleAnswerSelect = (questionIndex, answerIndex) => {\n    const newSelectedAnswers = [...selectedAnswers];\n    newSelectedAnswers[questionIndex] = answerIndex;\n    setSelectedAnswers(newSelectedAnswers);\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"md\",\n    children: /*#__PURE__*/_jsxDEV(Paper, {\n      elevation: 3,\n      style: {\n        padding: \"20px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        children: \"Quiz Questions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(List, {\n        children: questions.map((question, questionIndex) => /*#__PURE__*/_jsxDEV(ListItem, {\n          children: [/*#__PURE__*/_jsxDEV(ListItemText, {\n            primary: question.question,\n            primaryTypographyProps: {\n              variant: \"body1\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n            component: \"fieldset\",\n            children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n              component: \"legend\",\n              children: \"Select Answer\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(RadioGroup, {\n              name: `question-${questionIndex}`,\n              value: selectedAnswers[questionIndex],\n              onChange: e => handleAnswerSelect(questionIndex, e.target.value),\n              children: question.incorrect_answers.map((choice, choiceIndex) => /*#__PURE__*/_jsxDEV(FormControlLabel, {\n                value: choiceIndex,\n                control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 63,\n                  columnNumber: 32\n                }, this),\n                label: choice\n              }, choiceIndex, false, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 15\n          }, this)]\n        }, questionIndex, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(QuizComponent, \"C22Oopoau4T1AC1mDBajTy4KXGw=\");\n_c = QuizComponent;\nexport default QuizComponent;\nvar _c;\n$RefreshReg$(_c, \"QuizComponent\");","map":{"version":3,"names":["React","useState","useEffect","Typography","List","ListItem","ListItemText","Radio","RadioGroup","FormControlLabel","FormControl","FormLabel","Container","Paper","fetchQuizQuestions","jsxDEV","_jsxDEV","QuizComponent","_s","questions","setQuestions","selectedAnswers","setSelectedAnswers","fetchQuestions","quizQuestions","initialSelectedAnswers","Array","length","fill","handleAnswerSelect","questionIndex","answerIndex","newSelectedAnswers","maxWidth","children","elevation","style","padding","variant","fileName","_jsxFileName","lineNumber","columnNumber","map","question","primary","primaryTypographyProps","component","name","value","onChange","e","target","incorrect_answers","choice","choiceIndex","control","label","_c","$RefreshReg$"],"sources":["/Users/roneet/Users/Sudipti/quiz_app/src/components/QuizComponent.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport {\n  Typography,\n  List,\n  ListItem,\n  ListItemText,\n  Radio,\n  RadioGroup,\n  FormControlLabel,\n  FormControl,\n  FormLabel,\n  Container,\n  Paper,\n} from \"@mui/material\";\n\nimport { fetchQuizQuestions } from \"../data/api\";\n\nconst QuizComponent = () => {\n  const [questions, setQuestions] = useState([]);\n  const [selectedAnswers, setSelectedAnswers] = useState([]);\n\n  useEffect(() => {\n    const fetchQuestions = async () => {\n      const quizQuestions = await fetchQuizQuestions();\n      const initialSelectedAnswers = new Array(quizQuestions.length).fill(null);\n      setSelectedAnswers(initialSelectedAnswers);\n      setQuestions(quizQuestions);\n    };\n\n    fetchQuestions();\n  }, []);\n\n  const handleAnswerSelect = (questionIndex, answerIndex) => {\n    const newSelectedAnswers = [...selectedAnswers];\n    newSelectedAnswers[questionIndex] = answerIndex;\n    setSelectedAnswers(newSelectedAnswers);\n  };\n\n  return (\n    <Container maxWidth=\"md\">\n      <Paper elevation={3} style={{ padding: \"20px\" }}>\n        <Typography variant=\"h5\">Quiz Questions</Typography>\n        <List>\n          {questions.map((question, questionIndex) => (\n            <ListItem key={questionIndex}>\n              <ListItemText\n                primary={question.question}\n                primaryTypographyProps={{ variant: \"body1\" }}\n              />\n              <FormControl component=\"fieldset\">\n                <FormLabel component=\"legend\">Select Answer</FormLabel>\n                <RadioGroup\n                  name={`question-${questionIndex}`}\n                  value={selectedAnswers[questionIndex]}\n                  onChange={(e) =>\n                    handleAnswerSelect(questionIndex, e.target.value)\n                  }\n                >\n                  {question.incorrect_answers.map((choice, choiceIndex) => (\n                    <FormControlLabel\n                      key={choiceIndex}\n                      value={choiceIndex}\n                      control={<Radio />}\n                      label={choice}\n                    />\n                  ))}\n                </RadioGroup>\n              </FormControl>\n            </ListItem>\n          ))}\n        </List>\n      </Paper>\n    </Container>\n  );\n};\n\nexport default QuizComponent;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}