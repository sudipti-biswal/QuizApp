{"ast":null,"code":"var _jsxFileName = \"/Users/roneet/Users/Sudipti/quiz_app/src/components/QuizResults.jsx\";\n// import React from \"react\";\n// import { Typography, List, ListItem, Paper, Container } from \"@mui/material\";\n\n// const QuizResults = ({ questions, selectedAnswers }) => {\n//   return (\n//     <Container>\n//       <Typography\n//         style={{ textAlign: \"center\", marginBottom: \"20px\", marginTop: \"20px\" }}\n//         variant=\"h4\"\n//       >\n//         Your Quiz Results\n//       </Typography>\n//       <List>\n//         {questions.map((question, questionIndex) => {\n//           const selectedAnswerIndex = selectedAnswers[questionIndex];\n//           const isAnswerCorrect =\n//             question.options[selectedAnswerIndex] === question.correctAnswer;\n\n//           return (\n//             <ListItem key={questionIndex} style={{ marginBottom: \"16px\" }}>\n//               <Paper\n//                 elevation={3}\n//                 style={{\n//                   padding: \"16px\",\n//                   width: \"100%\",\n//                 }}\n//               >\n//                 <div style={{ display: \"flex\", alignItems: \"center\" }}>\n//                   <Typography variant=\"body1\">{questionIndex + 1}.</Typography>\n//                   <Typography variant=\"body1\">{question.question}</Typography>\n//                 </div>\n//                 <Typography\n//                   variant=\"body1\"\n//                   style={{\n//                     color: isAnswerCorrect ? \"green\" : \"red\",\n//                   }}\n//                 >\n//                   Your Answer: {question.options[selectedAnswerIndex]}\n//                 </Typography>\n//                 <Typography variant=\"body1\" style={{ color: \"green\" }}>\n//                   Correct Answer: {question.correctAnswer}\n//                 </Typography>\n//               </Paper>\n//             </ListItem>\n//           );\n//         })}\n//       </List>\n//     </Container>\n//   );\n// };\n\n// export default QuizResults;\n\nimport React from \"react\";\nimport { Typography, List, ListItem, Paper, Container, Button } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QuizResults = ({\n  questions,\n  selectedAnswers\n}) => {\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      children: \"Go Back\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      style: {\n        textAlign: \"center\",\n        marginBottom: \"20px\",\n        marginTop: \"20px\"\n      },\n      variant: \"h4\",\n      children: \"Your Quiz Results\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(List, {\n      children: questions.map((question, questionIndex) => {\n        const selectedAnswerIndex = selectedAnswers[questionIndex];\n        const isAnswerCorrect = question.options[selectedAnswerIndex] === question.correctAnswer;\n        return /*#__PURE__*/_jsxDEV(ListItem, {\n          style: {\n            marginBottom: \"16px\"\n          },\n          children: /*#__PURE__*/_jsxDEV(Paper, {\n            elevation: 3,\n            style: {\n              padding: \"16px\",\n              width: \"100%\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                display: \"flex\",\n                alignItems: \"center\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body1\",\n                children: [questionIndex + 1, \".\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body1\",\n                children: question.question\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body1\",\n              style: {\n                color: isAnswerCorrect ? \"green\" : \"red\"\n              },\n              children: [\"Your Answer: \", question.options[selectedAnswerIndex]]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body1\",\n              style: {\n                color: \"green\"\n              },\n              children: [\"Correct Answer: \", question.correctAnswer]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 15\n          }, this)\n        }, questionIndex, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n};\n_c = QuizResults;\nexport default QuizResults;\nvar _c;\n$RefreshReg$(_c, \"QuizResults\");","map":{"version":3,"names":["React","Typography","List","ListItem","Paper","Container","Button","jsxDEV","_jsxDEV","QuizResults","questions","selectedAnswers","children","variant","color","fileName","_jsxFileName","lineNumber","columnNumber","style","textAlign","marginBottom","marginTop","map","question","questionIndex","selectedAnswerIndex","isAnswerCorrect","options","correctAnswer","elevation","padding","width","display","alignItems","_c","$RefreshReg$"],"sources":["/Users/roneet/Users/Sudipti/quiz_app/src/components/QuizResults.jsx"],"sourcesContent":["// import React from \"react\";\n// import { Typography, List, ListItem, Paper, Container } from \"@mui/material\";\n\n// const QuizResults = ({ questions, selectedAnswers }) => {\n//   return (\n//     <Container>\n//       <Typography\n//         style={{ textAlign: \"center\", marginBottom: \"20px\", marginTop: \"20px\" }}\n//         variant=\"h4\"\n//       >\n//         Your Quiz Results\n//       </Typography>\n//       <List>\n//         {questions.map((question, questionIndex) => {\n//           const selectedAnswerIndex = selectedAnswers[questionIndex];\n//           const isAnswerCorrect =\n//             question.options[selectedAnswerIndex] === question.correctAnswer;\n\n//           return (\n//             <ListItem key={questionIndex} style={{ marginBottom: \"16px\" }}>\n//               <Paper\n//                 elevation={3}\n//                 style={{\n//                   padding: \"16px\",\n//                   width: \"100%\",\n//                 }}\n//               >\n//                 <div style={{ display: \"flex\", alignItems: \"center\" }}>\n//                   <Typography variant=\"body1\">{questionIndex + 1}.</Typography>\n//                   <Typography variant=\"body1\">{question.question}</Typography>\n//                 </div>\n//                 <Typography\n//                   variant=\"body1\"\n//                   style={{\n//                     color: isAnswerCorrect ? \"green\" : \"red\",\n//                   }}\n//                 >\n//                   Your Answer: {question.options[selectedAnswerIndex]}\n//                 </Typography>\n//                 <Typography variant=\"body1\" style={{ color: \"green\" }}>\n//                   Correct Answer: {question.correctAnswer}\n//                 </Typography>\n//               </Paper>\n//             </ListItem>\n//           );\n//         })}\n//       </List>\n//     </Container>\n//   );\n// };\n\n// export default QuizResults;\n\nimport React from \"react\";\nimport {\n  Typography,\n  List,\n  ListItem,\n  Paper,\n  Container,\n  Button,\n} from \"@mui/material\";\n\nconst QuizResults = ({ questions, selectedAnswers }) => {\n  return (\n    <Container>\n      <Button variant=\"contained\" color=\"primary\">\n        Go Back\n      </Button>\n      <Typography\n        style={{ textAlign: \"center\", marginBottom: \"20px\", marginTop: \"20px\" }}\n        variant=\"h4\"\n      >\n        Your Quiz Results\n      </Typography>\n      <List>\n        {questions.map((question, questionIndex) => {\n          const selectedAnswerIndex = selectedAnswers[questionIndex];\n          const isAnswerCorrect =\n            question.options[selectedAnswerIndex] === question.correctAnswer;\n\n          return (\n            <ListItem key={questionIndex} style={{ marginBottom: \"16px\" }}>\n              <Paper\n                elevation={3}\n                style={{\n                  padding: \"16px\",\n                  width: \"100%\",\n                }}\n              >\n                <div style={{ display: \"flex\", alignItems: \"center\" }}>\n                  <Typography variant=\"body1\">{questionIndex + 1}.</Typography>\n                  <Typography variant=\"body1\">{question.question}</Typography>\n                </div>\n                <Typography\n                  variant=\"body1\"\n                  style={{\n                    color: isAnswerCorrect ? \"green\" : \"red\",\n                  }}\n                >\n                  Your Answer: {question.options[selectedAnswerIndex]}\n                </Typography>\n                <Typography variant=\"body1\" style={{ color: \"green\" }}>\n                  Correct Answer: {question.correctAnswer}\n                </Typography>\n              </Paper>\n            </ListItem>\n          );\n        })}\n      </List>\n    </Container>\n  );\n};\n\nexport default QuizResults;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}