{"ast":null,"code":"var _jsxFileName = \"/Users/roneet/Users/Sudipti/quiz_app/src/components/QuizComponent.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Typography, List, ListItem, ListItemText, Radio, FormControlLabel, Container, Button, Paper, RadioGroup, Box } from \"@mui/material\";\nimport { fetchQuizQuestions } from \"../data/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QuizComponent = () => {\n  _s();\n  const [questions, setQuestions] = useState([]);\n  const [selectedAnswers, setSelectedAnswers] = useState(Array(10).fill(null)); // Assuming a fixed number of questions\n\n  useEffect(() => {\n    const fetchQuestions = async () => {\n      const quizQuestions = await fetchQuizQuestions();\n      setQuestions(quizQuestions);\n    };\n    fetchQuestions();\n  }, []);\n  const handleAnswerSelect = (questionIndex, answerIndex) => {\n    setSelectedAnswers(prevAnswers => {\n      const newAnswers = [...prevAnswers];\n      newAnswers[questionIndex] = answerIndex;\n      return newAnswers;\n    });\n  };\n  const renderOverviewPanel = () => /*#__PURE__*/_jsxDEV(Paper, {\n    elevation: 3,\n    style: {\n      padding: \"20px\",\n      width: \"30%\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h5\",\n      children: \"Questions\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(List, {\n      children: questions.map((question, questionIndex) => /*#__PURE__*/_jsxDEV(ListItem, {\n        button: true,\n        onClick: () => setCurrentQuestionIndex(questionIndex),\n        selected: currentQuestionIndex === questionIndex,\n        children: /*#__PURE__*/_jsxDEV(ListItemText, {\n          primary: `Question ${questionIndex + 1}`,\n          secondary: selectedAnswers[questionIndex] !== null ? \"Attempted\" : \"Not Attempted\",\n          secondaryTypographyProps: {\n            color: selectedAnswers[questionIndex] !== null ? \"textPrimary\" : \"textSecondary\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this)\n      }, questionIndex, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n  const currentQuestionIndex = questions.findIndex((_, index) => index === selectedAnswers.indexOf(null));\n  const currentQuestion = questions[currentQuestionIndex];\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"lg\",\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      children: [renderOverviewPanel(), /*#__PURE__*/_jsxDEV(Paper, {\n        elevation: 3,\n        style: {\n          padding: \"20px\",\n          width: \"70%\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          children: \"Quiz Questions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(List, {\n          children: /*#__PURE__*/_jsxDEV(ListItem, {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(ListItemText, {\n                primary: currentQuestion === null || currentQuestion === void 0 ? void 0 : currentQuestion.question\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(RadioGroup, {\n                name: `question-${currentQuestionIndex}`,\n                value: selectedAnswers[currentQuestionIndex],\n                onChange: e => handleAnswerSelect(currentQuestionIndex, e.target.value),\n                children: currentQuestion === null || currentQuestion === void 0 ? void 0 : currentQuestion.incorrect_answers.map((choice, choiceIndex) => /*#__PURE__*/_jsxDEV(FormControlLabel, {\n                  value: choiceIndex,\n                  control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 98,\n                    columnNumber: 34\n                  }, this),\n                  label: choice\n                }, choiceIndex, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 95,\n                  columnNumber: 23\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      children: \"Submit Answers\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n};\n_s(QuizComponent, \"8F4MtwkvoW8ZCJ43cmFLHl8B89I=\");\n_c = QuizComponent;\nexport default QuizComponent;\nvar _c;\n$RefreshReg$(_c, \"QuizComponent\");","map":{"version":3,"names":["React","useState","useEffect","Typography","List","ListItem","ListItemText","Radio","FormControlLabel","Container","Button","Paper","RadioGroup","Box","fetchQuizQuestions","jsxDEV","_jsxDEV","QuizComponent","_s","questions","setQuestions","selectedAnswers","setSelectedAnswers","Array","fill","fetchQuestions","quizQuestions","handleAnswerSelect","questionIndex","answerIndex","prevAnswers","newAnswers","renderOverviewPanel","elevation","style","padding","width","children","variant","fileName","_jsxFileName","lineNumber","columnNumber","map","question","button","onClick","setCurrentQuestionIndex","selected","currentQuestionIndex","primary","secondary","secondaryTypographyProps","color","findIndex","_","index","indexOf","currentQuestion","maxWidth","display","name","value","onChange","e","target","incorrect_answers","choice","choiceIndex","control","label","_c","$RefreshReg$"],"sources":["/Users/roneet/Users/Sudipti/quiz_app/src/components/QuizComponent.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport {\n  Typography,\n  List,\n  ListItem,\n  ListItemText,\n  Radio,\n  FormControlLabel,\n  Container,\n  Button,\n  Paper,\n  RadioGroup,\n  Box,\n} from \"@mui/material\";\n\nimport { fetchQuizQuestions } from \"../data/api\";\n\nconst QuizComponent = () => {\n  const [questions, setQuestions] = useState([]);\n  const [selectedAnswers, setSelectedAnswers] = useState(Array(10).fill(null)); // Assuming a fixed number of questions\n\n  useEffect(() => {\n    const fetchQuestions = async () => {\n      const quizQuestions = await fetchQuizQuestions();\n      setQuestions(quizQuestions);\n    };\n\n    fetchQuestions();\n  }, []);\n\n  const handleAnswerSelect = (questionIndex, answerIndex) => {\n    setSelectedAnswers((prevAnswers) => {\n      const newAnswers = [...prevAnswers];\n      newAnswers[questionIndex] = answerIndex;\n      return newAnswers;\n    });\n  };\n\n  const renderOverviewPanel = () => (\n    <Paper elevation={3} style={{ padding: \"20px\", width: \"30%\" }}>\n      <Typography variant=\"h5\">Questions</Typography>\n      <List>\n        {questions.map((question, questionIndex) => (\n          <ListItem\n            key={questionIndex}\n            button\n            onClick={() => setCurrentQuestionIndex(questionIndex)}\n            selected={currentQuestionIndex === questionIndex}\n          >\n            <ListItemText\n              primary={`Question ${questionIndex + 1}`}\n              secondary={\n                selectedAnswers[questionIndex] !== null\n                  ? \"Attempted\"\n                  : \"Not Attempted\"\n              }\n              secondaryTypographyProps={{\n                color:\n                  selectedAnswers[questionIndex] !== null\n                    ? \"textPrimary\"\n                    : \"textSecondary\",\n              }}\n            />\n          </ListItem>\n        ))}\n      </List>\n    </Paper>\n  );\n\n  const currentQuestionIndex = questions.findIndex(\n    (_, index) => index === selectedAnswers.indexOf(null)\n  );\n\n  const currentQuestion = questions[currentQuestionIndex];\n\n  return (\n    <Container maxWidth=\"lg\">\n      <Box display=\"flex\">\n        {renderOverviewPanel()}\n        <Paper elevation={3} style={{ padding: \"20px\", width: \"70%\" }}>\n          <Typography variant=\"h5\">Quiz Questions</Typography>\n          <List>\n            <ListItem>\n              <div>\n                <ListItemText primary={currentQuestion?.question} />\n                <RadioGroup\n                  name={`question-${currentQuestionIndex}`}\n                  value={selectedAnswers[currentQuestionIndex]}\n                  onChange={(e) =>\n                    handleAnswerSelect(currentQuestionIndex, e.target.value)\n                  }\n                >\n                  {currentQuestion?.incorrect_answers.map(\n                    (choice, choiceIndex) => (\n                      <FormControlLabel\n                        key={choiceIndex}\n                        value={choiceIndex}\n                        control={<Radio />}\n                        label={choice}\n                      />\n                    )\n                  )}\n                </RadioGroup>\n              </div>\n            </ListItem>\n          </List>\n        </Paper>\n      </Box>\n      <Button variant=\"contained\" color=\"primary\">\n        Submit Answers\n      </Button>\n    </Container>\n  );\n};\n\nexport default QuizComponent;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}