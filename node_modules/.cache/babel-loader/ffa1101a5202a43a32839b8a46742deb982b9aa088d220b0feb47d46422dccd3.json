{"ast":null,"code":"var _jsxFileName = \"/Users/roneet/Users/Sudipti/quiz_app/src/components/QuizResults.jsx\";\nimport React from \"react\";\nimport { Typography, List, ListItem, ListItemText, Paper, Box } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QuizResults = ({\n  questions,\n  selectedAnswers\n}) => {\n  console.log(questions);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h5\",\n      children: \"Quiz Results\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(List, {\n      children: questions.map((question, questionIndex) => /*#__PURE__*/_jsxDEV(ListItem, {\n        style: {\n          marginBottom: \"16px\"\n        },\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          elevation: 3,\n          style: {\n            padding: \"16px\",\n            width: \"100%\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            children: [\"Question \", questionIndex + 1]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body1\",\n            children: [\"Question: \", question.question]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body1\",\n            children: [\"Your Answer: \", question.options[selectedAnswers[questionIndex]]]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body1\",\n            children: [\"Correct Answer: \", question.options[question.correct_answers]]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 13\n        }, this)\n      }, questionIndex, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n};\n_c = QuizResults;\nexport default QuizResults;\nvar _c;\n$RefreshReg$(_c, \"QuizResults\");","map":{"version":3,"names":["React","Typography","List","ListItem","ListItemText","Paper","Box","jsxDEV","_jsxDEV","QuizResults","questions","selectedAnswers","console","log","children","variant","fileName","_jsxFileName","lineNumber","columnNumber","map","question","questionIndex","style","marginBottom","elevation","padding","width","options","correct_answers","_c","$RefreshReg$"],"sources":["/Users/roneet/Users/Sudipti/quiz_app/src/components/QuizResults.jsx"],"sourcesContent":["import React from \"react\";\nimport {\n  Typography,\n  List,\n  ListItem,\n  ListItemText,\n  Paper,\n  Box,\n} from \"@mui/material\";\n\nconst QuizResults = ({ questions, selectedAnswers }) => {\n  console.log(questions);\n  return (\n    <div>\n      <Typography variant=\"h5\">Quiz Results</Typography>\n      <List>\n        {questions.map((question, questionIndex) => (\n          <ListItem key={questionIndex} style={{ marginBottom: \"16px\" }}>\n            <Paper elevation={3} style={{ padding: \"16px\", width: \"100%\" }}>\n              <Typography variant=\"h6\">Question {questionIndex + 1}</Typography>\n              <Typography variant=\"body1\">\n                Question: {question.question}\n              </Typography>\n              <Typography variant=\"body1\">\n                Your Answer: {question.options[selectedAnswers[questionIndex]]}\n              </Typography>\n              <Typography variant=\"body1\">\n                Correct Answer: {question.options[question.correct_answers]}\n              </Typography>\n            </Paper>\n          </ListItem>\n        ))}\n      </List>\n    </div>\n  );\n};\n\nexport default QuizResults;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SACEC,UAAU,EACVC,IAAI,EACJC,QAAQ,EACRC,YAAY,EACZC,KAAK,EACLC,GAAG,QACE,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvB,MAAMC,WAAW,GAAGA,CAAC;EAAEC,SAAS;EAAEC;AAAgB,CAAC,KAAK;EACtDC,OAAO,CAACC,GAAG,CAACH,SAAS,CAAC;EACtB,oBACEF,OAAA;IAAAM,QAAA,gBACEN,OAAA,CAACP,UAAU;MAACc,OAAO,EAAC,IAAI;MAAAD,QAAA,EAAC;IAAY;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAY,CAAC,eAClDX,OAAA,CAACN,IAAI;MAAAY,QAAA,EACFJ,SAAS,CAACU,GAAG,CAAC,CAACC,QAAQ,EAAEC,aAAa,kBACrCd,OAAA,CAACL,QAAQ;QAAqBoB,KAAK,EAAE;UAAEC,YAAY,EAAE;QAAO,CAAE;QAAAV,QAAA,eAC5DN,OAAA,CAACH,KAAK;UAACoB,SAAS,EAAE,CAAE;UAACF,KAAK,EAAE;YAAEG,OAAO,EAAE,MAAM;YAAEC,KAAK,EAAE;UAAO,CAAE;UAAAb,QAAA,gBAC7DN,OAAA,CAACP,UAAU;YAACc,OAAO,EAAC,IAAI;YAAAD,QAAA,GAAC,WAAS,EAACQ,aAAa,GAAG,CAAC;UAAA;YAAAN,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAa,CAAC,eAClEX,OAAA,CAACP,UAAU;YAACc,OAAO,EAAC,OAAO;YAAAD,QAAA,GAAC,YAChB,EAACO,QAAQ,CAACA,QAAQ;UAAA;YAAAL,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAClB,CAAC,eACbX,OAAA,CAACP,UAAU;YAACc,OAAO,EAAC,OAAO;YAAAD,QAAA,GAAC,eACb,EAACO,QAAQ,CAACO,OAAO,CAACjB,eAAe,CAACW,aAAa,CAAC,CAAC;UAAA;YAAAN,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACpD,CAAC,eACbX,OAAA,CAACP,UAAU;YAACc,OAAO,EAAC,OAAO;YAAAD,QAAA,GAAC,kBACV,EAACO,QAAQ,CAACO,OAAO,CAACP,QAAQ,CAACQ,eAAe,CAAC;UAAA;YAAAb,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACjD,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACR;MAAC,GAZKG,aAAa;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAalB,CACX;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV,CAAC;AAACW,EAAA,GAzBIrB,WAAW;AA2BjB,eAAeA,WAAW;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}