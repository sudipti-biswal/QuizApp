{"ast":null,"code":"var _jsxFileName = \"/Users/roneet/Users/Sudipti/quiz_app/src/components/QuizComponent.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Typography, List, ListItem, ListItemText, Radio, FormControlLabel, Container, Button, Paper, RadioGroup, Box } from \"@mui/material\";\nimport { fetchQuizQuestions } from \"../data/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QuizComponent = () => {\n  _s();\n  const [questions, setQuestions] = useState([]);\n  const [selectedAnswers, setSelectedAnswers] = useState([]);\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [prevQuestionIndex, setPrevQuestionIndex] = useState(null);\n  useEffect(() => {\n    const fetchQuestions = async () => {\n      const quizQuestions = await fetchQuizQuestions();\n      const initialSelectedAnswers = new Array(quizQuestions.length).fill(null);\n      setSelectedAnswers(initialSelectedAnswers);\n      setQuestions(quizQuestions);\n    };\n    fetchQuestions();\n  }, []);\n  const handleAnswerSelect = (questionIndex, answerIndex) => {\n    const newSelectedAnswers = [...selectedAnswers];\n    newSelectedAnswers[questionIndex] = answerIndex;\n    setSelectedAnswers(newSelectedAnswers);\n  };\n  const handleQuestionClick = questionIndex => {\n    setPrevQuestionIndex(currentQuestionIndex); // Save the previous question index\n    setCurrentQuestionIndex(questionIndex);\n  };\n  const renderOverviewPanel = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        children: \"Questions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(List, {\n        style: {\n          display: \"flex\",\n          flexWrap: \"wrap\"\n        },\n        children: questions.map((question, questionIndex) => /*#__PURE__*/_jsxDEV(ListItem, {\n          onClick: () => handleQuestionClick(questionIndex),\n          button: true,\n          selected: currentQuestionIndex === questionIndex,\n          style: {\n            width: \"50px\",\n            margin: \"4px\",\n            textAlign: \"center\",\n            borderRadius: \"0px 10px 0px 0px\",\n            backgroundColor: selectedAnswers[questionIndex] !== null ? \"#007bff\" : (currentQuestionIndex === questionIndex || prevQuestionIndex === questionIndex) && currentQuestionIndex !== null ? \"#FFFF00\" : \"#ffffff\"\n          },\n          children: /*#__PURE__*/_jsxDEV(ListItemText, {\n            primary: `${questionIndex + 1}`,\n            style: {\n              color: selectedAnswers[questionIndex] !== null ? \"#fff\" : \"#000\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 15\n          }, this)\n        }, questionIndex, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this);\n  };\n  const currentQuestion = questions[currentQuestionIndex];\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"lg\",\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      justifyContent: \"space-between\",\n      children: [/*#__PURE__*/_jsxDEV(Paper, {\n        elevation: 3,\n        style: {\n          padding: \"20px\",\n          marginRight: \"20px\",\n          width: \"40%\",\n          backgroundColor: \"#f0f0f0\"\n        },\n        children: renderOverviewPanel()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Paper, {\n        elevation: 3,\n        style: {\n          padding: \"20px\",\n          width: \"70%\",\n          height: \"fit-content\",\n          backgroundColor: \"#ffffff\" // Example background color\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          children: \"Quiz Questions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(List, {\n          children: /*#__PURE__*/_jsxDEV(ListItem, {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(ListItemText, {\n                primary: currentQuestion === null || currentQuestion === void 0 ? void 0 : currentQuestion.question\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 117,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(RadioGroup, {\n                name: `question-${currentQuestionIndex}`,\n                value: selectedAnswers[currentQuestionIndex],\n                onChange: e => handleAnswerSelect(currentQuestionIndex, e.target.value),\n                children: currentQuestion === null || currentQuestion === void 0 ? void 0 : currentQuestion.incorrect_answers.map((choice, choiceIndex) => /*#__PURE__*/_jsxDEV(FormControlLabel, {\n                  value: choiceIndex,\n                  control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 130,\n                    columnNumber: 34\n                  }, this),\n                  label: choice\n                }, choiceIndex, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 127,\n                  columnNumber: 23\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 118,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      style: {\n        marginTop: \"20px\",\n        backgroundColor: \"#007bff\"\n      } // Example button style\n      ,\n      children: \"Submit Answers\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this);\n};\n_s(QuizComponent, \"74vkuV4KukaB+i2R0i3gtggw07I=\");\n_c = QuizComponent;\nexport default QuizComponent;\nvar _c;\n$RefreshReg$(_c, \"QuizComponent\");","map":{"version":3,"names":["React","useState","useEffect","Typography","List","ListItem","ListItemText","Radio","FormControlLabel","Container","Button","Paper","RadioGroup","Box","fetchQuizQuestions","jsxDEV","_jsxDEV","QuizComponent","_s","questions","setQuestions","selectedAnswers","setSelectedAnswers","currentQuestionIndex","setCurrentQuestionIndex","prevQuestionIndex","setPrevQuestionIndex","fetchQuestions","quizQuestions","initialSelectedAnswers","Array","length","fill","handleAnswerSelect","questionIndex","answerIndex","newSelectedAnswers","handleQuestionClick","renderOverviewPanel","children","variant","fileName","_jsxFileName","lineNumber","columnNumber","style","display","flexWrap","map","question","onClick","button","selected","width","margin","textAlign","borderRadius","backgroundColor","primary","color","currentQuestion","maxWidth","justifyContent","elevation","padding","marginRight","height","name","value","onChange","e","target","incorrect_answers","choice","choiceIndex","control","label","marginTop","_c","$RefreshReg$"],"sources":["/Users/roneet/Users/Sudipti/quiz_app/src/components/QuizComponent.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport {\n  Typography,\n  List,\n  ListItem,\n  ListItemText,\n  Radio,\n  FormControlLabel,\n  Container,\n  Button,\n  Paper,\n  RadioGroup,\n  Box,\n} from \"@mui/material\";\n\nimport { fetchQuizQuestions } from \"../data/api\";\n\nconst QuizComponent = () => {\n  const [questions, setQuestions] = useState([]);\n  const [selectedAnswers, setSelectedAnswers] = useState([]);\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [prevQuestionIndex, setPrevQuestionIndex] = useState(null);\n\n  useEffect(() => {\n    const fetchQuestions = async () => {\n      const quizQuestions = await fetchQuizQuestions();\n      const initialSelectedAnswers = new Array(quizQuestions.length).fill(null);\n      setSelectedAnswers(initialSelectedAnswers);\n      setQuestions(quizQuestions);\n    };\n\n    fetchQuestions();\n  }, []);\n\n  const handleAnswerSelect = (questionIndex, answerIndex) => {\n    const newSelectedAnswers = [...selectedAnswers];\n    newSelectedAnswers[questionIndex] = answerIndex;\n    setSelectedAnswers(newSelectedAnswers);\n  };\n\n  const handleQuestionClick = (questionIndex) => {\n    setPrevQuestionIndex(currentQuestionIndex); // Save the previous question index\n    setCurrentQuestionIndex(questionIndex);\n  };\n\n  const renderOverviewPanel = () => {\n    return (\n      <div>\n        <Typography variant=\"h5\">Questions</Typography>\n        <List style={{ display: \"flex\", flexWrap: \"wrap\" }}>\n          {questions.map((question, questionIndex) => (\n            <ListItem\n              key={questionIndex}\n              onClick={() => handleQuestionClick(questionIndex)}\n              button\n              selected={currentQuestionIndex === questionIndex}\n              style={{\n                width: \"50px\",\n                margin: \"4px\",\n                textAlign: \"center\",\n                borderRadius: \"0px 10px 0px 0px\",\n                backgroundColor:\n                  selectedAnswers[questionIndex] !== null\n                    ? \"#007bff\"\n                    : (currentQuestionIndex === questionIndex ||\n                        prevQuestionIndex === questionIndex) &&\n                      currentQuestionIndex !== null\n                    ? \"#FFFF00\"\n                    : \"#ffffff\",\n              }}\n            >\n              <ListItemText\n                primary={`${questionIndex + 1}`}\n                style={{\n                  color:\n                    selectedAnswers[questionIndex] !== null ? \"#fff\" : \"#000\",\n                }}\n              />\n            </ListItem>\n          ))}\n        </List>\n      </div>\n    );\n  };\n\n  const currentQuestion = questions[currentQuestionIndex];\n\n  return (\n    <Container maxWidth=\"lg\">\n      <Box display=\"flex\" justifyContent=\"space-between\">\n        {/* Overview Panel */}\n        <Paper\n          elevation={3}\n          style={{\n            padding: \"20px\",\n            marginRight: \"20px\",\n            width: \"40%\",\n            backgroundColor: \"#f0f0f0\",\n          }}\n        >\n          {renderOverviewPanel()}\n        </Paper>\n\n        <Paper\n          elevation={3}\n          style={{\n            padding: \"20px\",\n            width: \"70%\",\n            height: \"fit-content\",\n            backgroundColor: \"#ffffff\", // Example background color\n          }}\n        >\n          <Typography variant=\"h5\">Quiz Questions</Typography>\n          <List>\n            <ListItem>\n              <div>\n                <ListItemText primary={currentQuestion?.question} />\n                <RadioGroup\n                  name={`question-${currentQuestionIndex}`}\n                  value={selectedAnswers[currentQuestionIndex]}\n                  onChange={(e) =>\n                    handleAnswerSelect(currentQuestionIndex, e.target.value)\n                  }\n                >\n                  {currentQuestion?.incorrect_answers.map(\n                    (choice, choiceIndex) => (\n                      <FormControlLabel\n                        key={choiceIndex}\n                        value={choiceIndex}\n                        control={<Radio />}\n                        label={choice}\n                      />\n                    )\n                  )}\n                </RadioGroup>\n              </div>\n            </ListItem>\n          </List>\n        </Paper>\n      </Box>\n\n      {/* Submit Button */}\n      <Button\n        variant=\"contained\"\n        color=\"primary\"\n        style={{ marginTop: \"20px\", backgroundColor: \"#007bff\" }} // Example button style\n      >\n        Submit Answers\n      </Button>\n    </Container>\n  );\n};\n\nexport default QuizComponent;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}