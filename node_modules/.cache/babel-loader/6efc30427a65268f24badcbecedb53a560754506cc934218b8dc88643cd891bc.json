{"ast":null,"code":"var _jsxFileName = \"/Users/roneet/Users/Sudipti/quiz_app/src/components/QuestionNo.jsx\";\nimport { Typography, List, ListItem, ListItemText } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QuestionNo = ({\n  questions,\n  handleQuestionClick,\n  currentQuestionIndex,\n  attemptedQuestions,\n  visitedQuestions\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h5\",\n      children: \"Question No.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(List, {\n      style: {\n        display: \"flex\",\n        flexWrap: \"wrap\"\n      },\n      children: questions.map((question, questionIndex) => /*#__PURE__*/_jsxDEV(ListItem, {\n        onClick: () => handleQuestionClick(questionIndex),\n        button: true,\n        selected: currentQuestionIndex === questionIndex,\n        style: {\n          width: \"50px\",\n          margin: \"4px\",\n          textAlign: \"center\",\n          borderRadius: \"0px 10px 0px 0px\",\n          backgroundColor: attemptedQuestions.includes(questionIndex) ? \"#007bff\" // Attempted questions are blue\n          : visitedQuestions.includes(questionIndex) ? \"#f7a90d\" // Visited questions are yellow\n          : \"#00000073\" // Not visited questions are white\n        },\n        children: /*#__PURE__*/_jsxDEV(ListItemText, {\n          primary: `${questionIndex + 1}`,\n          style: {\n            color: attemptedQuestions.includes(questionIndex) || visitedQuestions.includes(questionIndex) ? \"#fff\" // Text color for attempted or visited questions\n            : \"#fff\" // Text color for not visited questions\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }, this)\n      }, questionIndex, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n};\n_c = QuestionNo;\nexport default QuestionNo;\nvar _c;\n$RefreshReg$(_c, \"QuestionNo\");","map":{"version":3,"names":["Typography","List","ListItem","ListItemText","jsxDEV","_jsxDEV","QuestionNo","questions","handleQuestionClick","currentQuestionIndex","attemptedQuestions","visitedQuestions","children","variant","fileName","_jsxFileName","lineNumber","columnNumber","style","display","flexWrap","map","question","questionIndex","onClick","button","selected","width","margin","textAlign","borderRadius","backgroundColor","includes","primary","color","_c","$RefreshReg$"],"sources":["/Users/roneet/Users/Sudipti/quiz_app/src/components/QuestionNo.jsx"],"sourcesContent":["import { Typography, List, ListItem, ListItemText } from \"@mui/material\";\n\nconst QuestionNo = ({\n  questions,\n  handleQuestionClick,\n  currentQuestionIndex,\n  attemptedQuestions,\n  visitedQuestions,\n}) => {\n  return (\n    <div>\n      <Typography variant=\"h5\">Question No.</Typography>\n      <List style={{ display: \"flex\", flexWrap: \"wrap\" }}>\n        {questions.map((question, questionIndex) => (\n          <ListItem\n            key={questionIndex}\n            onClick={() => handleQuestionClick(questionIndex)}\n            button\n            selected={currentQuestionIndex === questionIndex}\n            style={{\n              width: \"50px\",\n              margin: \"4px\",\n              textAlign: \"center\",\n              borderRadius: \"0px 10px 0px 0px\",\n              backgroundColor: attemptedQuestions.includes(questionIndex)\n                ? \"#007bff\" // Attempted questions are blue\n                : visitedQuestions.includes(questionIndex)\n                ? \"#f7a90d\" // Visited questions are yellow\n                : \"#00000073\", // Not visited questions are white\n            }}\n          >\n            <ListItemText\n              primary={`${questionIndex + 1}`}\n              style={{\n                color:\n                  attemptedQuestions.includes(questionIndex) ||\n                  visitedQuestions.includes(questionIndex)\n                    ? \"#fff\" // Text color for attempted or visited questions\n                    : \"#fff\", // Text color for not visited questions\n              }}\n            />\n          </ListItem>\n        ))}\n      </List>\n    </div>\n  );\n};\n\nexport default QuestionNo;\n"],"mappings":";AAAA,SAASA,UAAU,EAAEC,IAAI,EAAEC,QAAQ,EAAEC,YAAY,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzE,MAAMC,UAAU,GAAGA,CAAC;EAClBC,SAAS;EACTC,mBAAmB;EACnBC,oBAAoB;EACpBC,kBAAkB;EAClBC;AACF,CAAC,KAAK;EACJ,oBACEN,OAAA;IAAAO,QAAA,gBACEP,OAAA,CAACL,UAAU;MAACa,OAAO,EAAC,IAAI;MAAAD,QAAA,EAAC;IAAY;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAY,CAAC,eAClDZ,OAAA,CAACJ,IAAI;MAACiB,KAAK,EAAE;QAAEC,OAAO,EAAE,MAAM;QAAEC,QAAQ,EAAE;MAAO,CAAE;MAAAR,QAAA,EAChDL,SAAS,CAACc,GAAG,CAAC,CAACC,QAAQ,EAAEC,aAAa,kBACrClB,OAAA,CAACH,QAAQ;QAEPsB,OAAO,EAAEA,CAAA,KAAMhB,mBAAmB,CAACe,aAAa,CAAE;QAClDE,MAAM;QACNC,QAAQ,EAAEjB,oBAAoB,KAAKc,aAAc;QACjDL,KAAK,EAAE;UACLS,KAAK,EAAE,MAAM;UACbC,MAAM,EAAE,KAAK;UACbC,SAAS,EAAE,QAAQ;UACnBC,YAAY,EAAE,kBAAkB;UAChCC,eAAe,EAAErB,kBAAkB,CAACsB,QAAQ,CAACT,aAAa,CAAC,GACvD,SAAS,CAAC;UAAA,EACVZ,gBAAgB,CAACqB,QAAQ,CAACT,aAAa,CAAC,GACxC,SAAS,CAAC;UAAA,EACV,WAAW,CAAE;QACnB,CAAE;QAAAX,QAAA,eAEFP,OAAA,CAACF,YAAY;UACX8B,OAAO,EAAG,GAAEV,aAAa,GAAG,CAAE,EAAE;UAChCL,KAAK,EAAE;YACLgB,KAAK,EACHxB,kBAAkB,CAACsB,QAAQ,CAACT,aAAa,CAAC,IAC1CZ,gBAAgB,CAACqB,QAAQ,CAACT,aAAa,CAAC,GACpC,MAAM,CAAC;YAAA,EACP,MAAM,CAAE;UAChB;QAAE;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH;MAAC,GAzBGM,aAAa;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OA0BV,CACX;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV,CAAC;AAACkB,EAAA,GA5CI7B,UAAU;AA8ChB,eAAeA,UAAU;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}